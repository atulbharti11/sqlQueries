-- simple query
SELECT PRODUCT.*
FROM PRODUCT;

-- SELECT WITH A COLUMN LIST
SELECT P_CODE, P_DESCRIPT, P_PRICE, P_QOH
FROM PRODUCT;

-- SELECT WITH COLUMN ALIASES
SELECT P_CODE, P_DESCRIPT AS DESCRIPTION, PRODUCT.P_PRICE AS 'Unit Price', PRODUCT.P_QOH AS QTY
FROM PRODUCT;

-- SELECT STATEMENT WITH A COMPUTED COLUMN AND AN ALIAS
SELECT P_DESCRIPT, P_QOH, P_PRICE, P_PRICE*P_Qoh AS TOTVALUE
FROM PRODUCT;

-- A LISTING OF DISTINCT V_CODE VALUES IN THE PRODUCT TABLE
SELECT DISTINCT V_CODE
FROM PRODUCT;

-- THE RESULTS OF A JOIN
SELECT P_DESCRIPT, P_PRICE, V_NAME, V_CONTACT, V_AREACODE, V_PHONE
FROM VENDOR INNER JOIN PRODUCT ON VENDOR.V_CODE = PRODUCT.V_CODE;

-- CUSTOMER NATURAL JOIN INVOICE RESULTS
SELECT CUSTOMER.CUS_CODE, CUSTOMER.CUS_LNAME, INVOICE.INV_NUMBER, INVOICE.INV_DATE
FROM CUSTOMER  JOIN INVOICE ON CUSTOMER.CUS_CODE = INVOICE.CUS_CODE;

--  JOIN WITH THREE TABLES
SELECT INVOICE.INV_NUMBER, LINE.P_CODE, PRODUCT.P_DESCRIPT, LINE.LINE_UNITS, LINE.LINE_PRICE
FROM PRODUCT INNER JOIN (INVOICE INNER JOIN LINE ON INVOICE.INV_NUMBER = LINE.INV_NUMBER) ON PRODUCT.P_CODE = LINE.P_CODE;

-- JOIN USING RESULTS
SELECT PRODUCT.P_CODE, PRODUCT.P_DESCRIPT, VENDOR.V_CODE, VENDOR.V_NAME, VENDOR.V_AREACODE, VENDOR.V_PHONE
FROM VENDOR INNER JOIN PRODUCT USING (V_CODE);

-- LEFT (OUTER) JOIN RESULTS
SELECT PRODUCT.P_CODE, VENDOR.V_CODE, VENDOR.V_NAME
FROM VENDOR LEFT JOIN PRODUCT ON VENDOR.V_CODE = PRODUCT.V_CODE;

-- RIGHT JOIN RESULTS
SELECT PRODUCT.P_CODE, VENDOR.V_CODE, VENDOR.V_NAME
FROM VENDOR RIGHT JOIN PRODUCT ON VENDOR.V_CODE = PRODUCT.V_CODE;

-- USING AN ALIAS TO JOIN A TABLE TO ITSELF
SELECT E.EMP_NUM, E.EMP_LNAME, E.EMP_MGR, M.EMP_LNAME
FROM EMP AS M INNER JOIN EMP AS E ON M.EMP_NUM = E.EMP_MGR;

-- PRODUCTS SORTED BY PRICE IN ASCENDING ORDER
SELECT PRODUCT.P_CODE, PRODUCT.P_DESCRIPT, PRODUCT.P_QOH, PRODUCT.P_PRICE
FROM PRODUCT
ORDER BY PRODUCT.P_PRICE ;

-- cascading order sequence
SELECT EMPLOYEE.EMP_LNAME, EMPLOYEE.EMP_FNAME, EMPLOYEE.EMP_INITIAL, EMPLOYEE.EMP_AREACODE, EMPLOYEE.EMP_PHONE
FROM EMPLOYEE
ORDER BY EMPLOYEE.EMP_LNAME, EMPLOYEE.EMP_FNAME, EMPLOYEE.EMP_INITIAL;

-- ORDERING BY A DERIVED ATTRIBUTE
SELECT PRODUCT.P_CODE, PRODUCT.P_DESCRIPT, PRODUCT.V_CODE, Round(P_PRICE*P_QOH,2) AS TOTAL
FROM PRODUCT
ORDER BY PRODUCT.V_CODE, Round((P_PRICE*P_QOH),2) DESC;

-- SELECTED PRODUCT ATTRIBUTES FOR VENDOR CODE 21344
SELECT PRODUCT.P_DESCRIPT, PRODUCT.P_QOH, PRODUCT.P_PRICE, PRODUCT.V_CODE
FROM PRODUCT
WHERE (((PRODUCT.V_CODE)=21344));

-- Product Attributes for Vendor Codes Other than 21344
SELECT PRODUCT.P_DESCRIPT, PRODUCT.P_QOH, PRODUCT.P_PRICE, PRODUCT.V_CODE
FROM PRODUCT
WHERE (((PRODUCT.V_CODE)<>21344));

-- Select Product Table Attributes with a P_Price Restriction
SELECT PRODUCT.P_DESCRIPT, PRODUCT.P_QOH, PRODUCT.P_MIN, PRODUCT.P_PRICE
FROM PRODUCT
WHERE (((PRODUCT.P_PRICE)<=10));

-- Using Comparison Operators on Character Attributes
SELECT PRODUCT.P_CODE, PRODUCT.P_DESCRIPT, PRODUCT.P_QOH, PRODUCT.P_MIN, PRODUCT.P_PRICE
FROM PRODUCT
WHERE (((PRODUCT.P_CODE)<'1558-QW1'));

-- SELECTED PRODUCT TABLE ATTRIBUTES: DATE RESTRICTION
SELECT PRODUCT.P_DESCRIPT, PRODUCT.P_QOH, PRODUCT.P_MIN, PRODUCT.P_PRICE, PRODUCT.P_INDATE
FROM PRODUCT
WHERE (((PRODUCT.P_INDATE)>='2018-01-20-'));

-- THE LOGICAL OR
SELECT PRODUCT.P_DESCRIPT, PRODUCT.P_QOH, PRODUCT.P_PRICE, PRODUCT.V_CODE
FROM PRODUCT
WHERE (((PRODUCT.V_CODE)=21344)) OR (((PRODUCT.V_CODE)=24288));

-- THE LOGICAL AND
SELECT P_DESCRIPT, P_QOH, P_PRICE, V_CODE
FROM PRODUCT
WHERE (((P_QOH)<20) AND ((P_PRICE)>100));

-- THE LOGICAL AND and OR
SELECT PRODUCT.P_DESCRIPT, PRODUCT.P_PRICE, PRODUCT.V_CODE
FROM PRODUCT
WHERE (((PRODUCT.P_PRICE)>100) AND ((PRODUCT.V_CODE)=25595)) OR (((PRODUCT.P_PRICE)>100) AND ((PRODUCT.V_CODE)=24288));

-- VENDOR CONTACTS THAT START WITH “SMITH”
SELECT VENDOR.V_NAME, VENDOR.V_CONTACT, VENDOR.V_AREACODE, VENDOR.V_PHONE
FROM VENDOR
WHERE (((VENDOR.V_CONTACT) Like "Smith%"));

-- PRODUCTS NOT ASSOCIATED WITH A VENDOR
SELECT PRODUCT.P_CODE, PRODUCT.P_DESCRIPT, PRODUCT.V_CODE
FROM PRODUCT
WHERE (((PRODUCT.V_CODE) Is Null));

-- VENDORS NOT ASSOCIATED WITH ANY PRODUCT
SELECT VENDOR.V_CODE, VENDOR.V_NAME, PRODUCT.P_CODE
FROM VENDOR LEFT JOIN PRODUCT ON VENDOR.V_CODE = PRODUCT.V_CODE
WHERE (((PRODUCT.P_CODE) Is Null));

-- TOTAL VALUE OF PRODUCTS FROM VENDOR IN TN OR KY
SELECT VENDOR.V_CODE, VENDOR.V_NAME, VENDOR.V_STATE, PRODUCT.P_CODE, PRODUCT.P_DESCRIPT, (P_PRICE*P_QOH) AS TOTAL
FROM VENDOR INNER JOIN PRODUCT ON VENDOR.V_CODE = PRODUCT.V_CODE
WHERE (((VENDOR.V_STATE)="TN" Or (VENDOR.V_STATE)="KY"))
ORDER BY VENDOR.V_STATE, P_PRICE*P_QOH DESC;

-- COUNT OF DISTINCT VENDOR CODES
SELECT count(v_code) AS 'Count Distinct'
FROM (select distinct v_code from product)  AS sub1;

-- MAXIMUM AND MINIMUM PRICE OUTPUT
SELECT Max(PRODUCT.P_PRICE) AS MAXPRICE, Min(PRODUCT.P_PRICE) AS MINPRICE
FROM PRODUCT;

SELECT Sum(p_qoh*P_price) AS TOTVALUE
FROM PRODUCT;

SELECT Avg(PRODUCT.P_PRICE) AS AVGPRICE
FROM PRODUCT;

-- AVERAGE PRICE OF PRODUCTS FROM EACH VENDOR
SELECT PRODUCT.V_CODE, Avg(PRODUCT.P_PRICE) AS AVGPRICE
FROM PRODUCT
GROUP BY PRODUCT.V_CODE;

-- COUNT OF PRODUCTS AND AVERAGE PRICES FROM EACH VENDOR
SELECT PRODUCT.V_CODE, VENDOR.V_NAME, Count(PRODUCT.P_CODE) AS NUMPRODS, Avg(PRODUCT.P_PRICE) AS AVGPRICE
FROM VENDOR INNER JOIN PRODUCT ON VENDOR.V_CODE = PRODUCT.V_CODE
GROUP BY PRODUCT.V_CODE, VENDOR.V_NAME;

-- APPLICATION OF THE HAVING CLAUSE
SELECT PRODUCT.V_CODE, Count(PRODUCT.P_CODE) AS NUMPRODS
FROM PRODUCT
GROUP BY PRODUCT.V_CODE
HAVING (((Avg(PRODUCT.P_PRICE))<10))
ORDER BY PRODUCT.V_CODE;

-- Where Subqueries
SELECT PRODUCT.P_CODE, PRODUCT.P_PRICE
FROM PRODUCT
WHERE (((PRODUCT.P_PRICE)>(SELECT AVG(P_PRICE) FROM PRODUCT)));

create view product_view as select * from product;
